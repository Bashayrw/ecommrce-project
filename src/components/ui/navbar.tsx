/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/C8qEfiwer2b
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Link } from "react-router-dom"
import { Button } from "@/components/ui/button"
import { SheetTrigger, SheetContent, Sheet } from "@/components/ui/sheet"
import { Cart } from "./cart"
import { useContext } from "react"
import { GlobalContext } from "@/App"
import { ROLE } from "@/types"
import { Sparkle } from "lucide-react"

export function NavBar() {
  const context = useContext(GlobalContext)
  if (!context) throw Error("context is missing ")
  const { state, handleRemoveUser } = context

 

  const handleLogout = () => {
    localStorage.removeItem("token")
    localStorage.removeItem("user")

    handleRemoveUser()
  }

  return (
    <header className="flex h-16 items-center justify-between px-4 md:px-6">
      <Link className="flex items-center gap-2" to="/">
        <Sparkle className="h-6 w-6" />
        <span className="font-['Open_Sans'] text-2xl italic font-semibold capitalize">
          Lustrous
        </span>
      </Link>
      <nav className="hidden items-center gap-6 text-base font-medium md:flex justify-between">
        <Link className="hover:underline hover:underline-offset-4 " to="/">
          Home
        </Link>
        {!state.user && (
          <Link className="hover:underline hover:underline-offset-4" to="/login">
            Login
          </Link>
        )}
        {!state.user && (
          <Link className="hover:underline hover:underline-offset-4" to="/signup">
            Signup
          </Link>
        )}
        {state.user?.role === ROLE.Admin && (
          <Link className="hover:underline hover:underline-offset-4" to="/dashboard">
            Dashboard
          </Link>
        )}
        {state.user && (
          <Link
            className="hover:underline hover:underline-offset-4"
            to="/"
            onClick={handleRemoveUser}
          >
            Logout
          </Link>
        )}
      </nav>
      <Sheet>
        <SheetTrigger asChild>
          <Button className="md:hidden" size="icon" variant="outline">
            <MenuIcon className="h-6 w-6" />
            <span className="sr-only">Toggle navigation menu</span>
          </Button>
        </SheetTrigger>
        <SheetContent side="right">
          <div className="grid gap-6 p-6">
            <Link className="text-lg font-medium hover:underline" to="/">
              Home
            </Link>
            {!state.user && (
              <Link className="text-lg font-medium hover:underline" to="/login">
                Login
              </Link>
            )}
            {!state.user && (
              <Link className="text-lg font-medium hover:underline" to="/signup">
                Signup
              </Link>
            )}
            {state.user?.role === ROLE.Admin && (
              <Link className="text-lg font-medium hover:underline" to="/dashboard">
                Dashboard
              </Link>
            )}
            {state.user && (
              <Link className="text-lg font-medium hover:underline" to="/">
                Logout
              </Link>
            )}
          </div>
        </SheetContent>
      </Sheet>
    </header>
  )
}

function MenuIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="4" x2="20" y1="12" y2="12" />
      <line x1="4" x2="20" y1="6" y2="6" />
      <line x1="4" x2="20" y1="18" y2="18" />
    </svg>
  )
}

function MountainIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  )
}
